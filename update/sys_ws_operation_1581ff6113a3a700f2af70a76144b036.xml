<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json,application/xml,text/xml</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>POST</http_method>
        <name>CMDB Workshop</name>
        <operation_script><![CDATA[/* Author: Aleck.Lin@ServiceNow.com */

(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

	var debugFlag = true;
	
	var payloadString = request.queryParams.payload + '';
	debug('payloadString: ' + payloadString);

	var payloadObj = new global.JSON().decode(payloadString);
	
	try {
		var suffixURL = ".lab.service-now.com";
		
		var instructorInstanceUrl = "https://" + payloadObj.instructor_instance_name + suffixURL;
		
		if (gs.nil(payloadObj.instructor_instance_name)) {
			debug("instructor_instance_name is nil. This should not be... abort!");
			return;
		}
		
		//Create or insert the lab event
		var grle = new GlideRecord("x_snc_cmdb_fwapp_lab_event");
		grle.addQuery("instructor_instance_url", instructorInstanceUrl);
		grle.query();
		if (!grle.next()) {
			grle.initialize();
			grle.instructor_instance_url = instructorInstanceUrl;
			grle.lab_template = payloadObj.lab_template;
			grle.insert();			
		}
		
		if (gs.nil(payloadObj.email_address)){
			debug("Student email address is nil. This should not be... abort!");
			return;			
		}		
		
		var grsi = new GlideRecord("x_snc_cmdb_fwapp_student_instance");
		grsi.addQuery("email_address", payloadObj.email_address);
		grsi.query();
		if (!grsi.next()) {
			grsi.initialize();
			grsi.email_address = payloadObj.email_address;
			grsi.first_name = payloadObj.first_name;
			grsi.last_name = payloadObj.last_name;
			grsi.url = payloadObj.student_instance_url;
			grsi.instance_name = payloadObj.student_instance_name;
			grsi.lab_event = grle.sys_id;
			grsi.insert();
		}
		
	} catch (error) {
		response.setStatus(error.status);
		response.setError(error.message);
	}
	
	
	function debug(msg) {
		if (debugFlag)
			gs.info("CMDB Foundations: " + msg);
	}
 	

})(request, response);]]></operation_script>
        <operation_uri>/api/x_snc_cmdb_fwapp/cmdb_foundations_workshop_inbound</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>false</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description/>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>aleck.lin</sys_created_by>
        <sys_created_on>2019-02-11 03:46:07</sys_created_on>
        <sys_id>1581ff6113a3a700f2af70a76144b036</sys_id>
        <sys_mod_count>10</sys_mod_count>
        <sys_name>CMDB Workshop</sys_name>
        <sys_package display_value="CMDB Foundations Workshop App" source="x_snc_cmdb_fwapp">e3b9fee11323a700f2af70a76144b0b1</sys_package>
        <sys_policy/>
        <sys_scope display_value="CMDB Foundations Workshop App">e3b9fee11323a700f2af70a76144b0b1</sys_scope>
        <sys_update_name>sys_ws_operation_1581ff6113a3a700f2af70a76144b036</sys_update_name>
        <sys_updated_by>aleck.lin</sys_updated_by>
        <sys_updated_on>2019-02-11 08:15:23</sys_updated_on>
        <web_service_definition display_value="CMDB Foundations Workshop Inbound">90617f6113a3a700f2af70a76144b05f</web_service_definition>
        <web_service_version/>
    </sys_ws_operation>
</record_update>
